@rendermode @(AppDomain.CurrentDomain.FriendlyName.Contains("Tea.Web") ? Microsoft.AspNetCore.Components.Web.RenderMode.InteractiveServer : null)
@page "/cart"
@using Tea.Shared.Services
@using Tea.Shared.Models
@using Tea.Shared.Components
@inject LanguageService LanguageService
@inject CartService CartService
@inject NavigationManager Navigation
@implements IDisposable

<PageTitle>@LanguageService.GetText("‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ - BUBBLICIOUS", "Shopping Cart - BUBBLICIOUS")</PageTitle>

<div class="cart-container">
    <div class="language-toggle-container">
        <LanguageToggle />
    </div>

    <div class="cart-header">
        <h1 class="cart-title">@LanguageService.GetText("‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠", "Order Details")</h1>
        <button class="btn-secondary" @onclick="GoBackToMenu">
            @LanguageService.GetText("‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡πÄ‡∏°‡∏ô‡∏π", "Back to Menu")
        </button>
    </div>

    @if (cartItems.Any())
    {
        <div class="cart-items">
            @foreach (var item in cartItems)
            {
                <div class="cart-item">
                    <div class="item-image">
                        <img src="@item.Beverage.ImageUrl" alt="@GetBeverageName(item.Beverage)" onerror="this.src='/img/default-beverage.svg'" />
                    </div>
                    
                    <div class="item-details">
                        <h3 class="item-name">@GetBeverageName(item.Beverage)</h3>
                        
                        @if (item.SelectedToppings.Any())
                        {
                            <div class="item-toppings">
                                <span class="toppings-label">@LanguageService.GetText("‡∏ó‡πá‡∏≠‡∏õ‡∏õ‡∏¥‡πâ‡∏á:", "Toppings:"):</span>
                                @foreach (var topping in item.SelectedToppings)
                                {
                                    <span class="topping-tag">@GetToppingName(topping)</span>
                                }
                            </div>
                        }
                        
                        <div class="item-options">
                            <span>@LanguageService.GetText("‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏ß‡∏≤‡∏ô:", "Sweetness:")</span> @((int)item.SweetnessLevel)%
                            <span class="option-separator">|</span>
                            <span>@LanguageService.GetText("‡∏ô‡πâ‡∏≥‡πÅ‡∏Ç‡πá‡∏á:", "Ice:")</span> @GetIceLevelText(item.IceLevel)
                        </div>
                        
                        <div class="item-price">
                            <span class="unit-price">‡∏ø@(item.Beverage.Price + item.SelectedToppings.Sum(t => t.Price)) √ó @item.Quantity</span>
                            <span class="total-price">= ‡∏ø@item.TotalPrice</span>
                        </div>
                    </div>
                    
                    <div class="item-controls">
                        <div class="quantity-controls">
                            <button class="quantity-btn" @onclick="() => UpdateQuantity(item.Id, item.Quantity - 1)" disabled="@(item.Quantity <= 1)">-</button>
                            <span class="quantity-display">@item.Quantity</span>
                            <button class="quantity-btn" @onclick="() => UpdateQuantity(item.Id, item.Quantity + 1)">+</button>
                        </div>
                        <button class="remove-btn" @onclick="() => RemoveItem(item.Id)">
                            @LanguageService.GetText("‡∏•‡∏ö", "Remove")
                        </button>
                    </div>
                </div>
            }
        </div>

        <div class="cart-summary">
            <div class="summary-row">
                <span>@LanguageService.GetText("‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£:", "Total Items:")</span>
                <span>@CartService.GetCartItemCount() @LanguageService.GetText("‡∏ä‡∏¥‡πâ‡∏ô", "items")</span>
            </div>
            <div class="summary-row total-row">
                <span>@LanguageService.GetText("‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏°:", "Total Amount:")</span>
                <span class="total-amount">‡∏ø@CartService.GetCartTotal()</span>
            </div>
            
            <button class="order-btn" @onclick="PlaceOrder">
                @LanguageService.GetText("‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡πÄ‡∏•‡∏¢!", "Place Order!")
            </button>
        </div>
    }
    else
    {
        <div class="empty-cart">
            <div class="empty-cart-icon">üõí</div>
            <h2>@LanguageService.GetText("‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏õ‡∏•‡πà‡∏≤", "Your cart is empty")</h2>
            <p>@LanguageService.GetText("‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏î‡∏∑‡πà‡∏°‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏ä‡∏∑‡πà‡∏ô‡∏ä‡∏≠‡∏ö‡∏•‡∏á‡πÉ‡∏ô‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤", "Add your favorite beverages to the cart")</p>
            <button class="btn-primary" @onclick="GoBackToMenu">
                @LanguageService.GetText("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏î‡∏∑‡πà‡∏°", "Browse Beverages")
            </button>
        </div>
    }
</div>

@code {
    private List<CartItem> cartItems = new();

    protected override void OnInitialized()
    {
        LanguageService.LanguageChanged += StateHasChanged;
        CartService.CartChanged += LoadCartItems;
        LoadCartItems();
    }

    private void LoadCartItems()
    {
        cartItems = CartService.GetCartItems();
        StateHasChanged();
    }

    private string GetBeverageName(BeverageItem beverage)
    {
        return LanguageService.CurrentLanguage == Language.Thai ? beverage.NameThai : beverage.NameEnglish;
    }

    private string GetToppingName(Topping topping)
    {
        return LanguageService.CurrentLanguage == Language.Thai ? topping.NameThai : topping.NameEnglish;
    }

    private string GetIceLevelText(IceLevel iceLevel)
    {
        return iceLevel switch
        {
            IceLevel.None => LanguageService.GetText("‡πÑ‡∏°‡πà‡πÉ‡∏™‡πà", "No Ice"),
            IceLevel.Light => LanguageService.GetText("‡∏ô‡πâ‡∏≠‡∏¢", "Light"),
            IceLevel.Normal => LanguageService.GetText("‡∏õ‡∏Å‡∏ï‡∏¥", "Normal"),
            IceLevel.Extra => LanguageService.GetText("‡πÄ‡∏¢‡∏≠‡∏∞", "Extra"),
            _ => ""
        };
    }

    private void UpdateQuantity(int cartItemId, int newQuantity)
    {
        CartService.UpdateQuantity(cartItemId, newQuantity);
    }

    private void RemoveItem(int cartItemId)
    {
        CartService.RemoveFromCart(cartItemId);
    }

    private void GoBackToMenu()
    {
        Navigation.NavigateTo("/menu");
    }

    private void PlaceOrder()
    {
        if (cartItems.Any())
        {
            Navigation.NavigateTo("/qr-payment");
        }
    }

    public void Dispose()
    {
        LanguageService.LanguageChanged -= StateHasChanged;
        CartService.CartChanged -= LoadCartItems;
    }
}